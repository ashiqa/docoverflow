[{"/home/ashiqa/Desktop/reddit-clone/client/src/index.js":"1","/home/ashiqa/Desktop/reddit-clone/client/src/App.js":"2","/home/ashiqa/Desktop/reddit-clone/client/src/AuthModalContext.js":"3","/home/ashiqa/Desktop/reddit-clone/client/src/UserContext.js":"4","/home/ashiqa/Desktop/reddit-clone/client/src/PostFormModalContext.js":"5","/home/ashiqa/Desktop/reddit-clone/client/src/Routing.js":"6","/home/ashiqa/Desktop/reddit-clone/client/src/Header.js":"7","/home/ashiqa/Desktop/reddit-clone/client/src/RoutingSwitch.js":"8","/home/ashiqa/Desktop/reddit-clone/client/src/PostFormModal.js":"9","/home/ashiqa/Desktop/reddit-clone/client/src/AuthModal.js":"10","/home/ashiqa/Desktop/reddit-clone/client/src/Button.js":"11","/home/ashiqa/Desktop/reddit-clone/client/src/Board.js":"12","/home/ashiqa/Desktop/reddit-clone/client/src/CommentPage.js":"13","/home/ashiqa/Desktop/reddit-clone/client/src/CommentModal.js":"14","/home/ashiqa/Desktop/reddit-clone/client/src/Input.js":"15","/home/ashiqa/Desktop/reddit-clone/client/src/Textarea.js":"16","/home/ashiqa/Desktop/reddit-clone/client/src/PostForm.js":"17","/home/ashiqa/Desktop/reddit-clone/client/src/BoardHeader.js":"18","/home/ashiqa/Desktop/reddit-clone/client/src/PostsListing.js":"19","/home/ashiqa/Desktop/reddit-clone/client/src/Comment.js":"20","/home/ashiqa/Desktop/reddit-clone/client/src/CommentForm.js":"21","/home/ashiqa/Desktop/reddit-clone/client/src/PostContent.js":"22","/home/ashiqa/Desktop/reddit-clone/client/src/Comments.js":"23","/home/ashiqa/Desktop/reddit-clone/client/src/RootCommentContext.js":"24","/home/ashiqa/Desktop/reddit-clone/client/src/Post.js":"25","/home/ashiqa/Desktop/reddit-clone/client/src/Voting.js":"26"},{"size":197,"mtime":1637572762704,"results":"27","hashOfConfig":"28"},{"size":1161,"mtime":1637572762700,"results":"29","hashOfConfig":"28"},{"size":111,"mtime":1637572762700,"results":"30","hashOfConfig":"28"},{"size":101,"mtime":1637572762704,"results":"31","hashOfConfig":"28"},{"size":119,"mtime":1637572762704,"results":"32","hashOfConfig":"28"},{"size":393,"mtime":1637572762704,"results":"33","hashOfConfig":"28"},{"size":3944,"mtime":1637572762704,"results":"34","hashOfConfig":"28"},{"size":1175,"mtime":1637572762704,"results":"35","hashOfConfig":"28"},{"size":2309,"mtime":1637572762704,"results":"36","hashOfConfig":"28"},{"size":3602,"mtime":1637572762700,"results":"37","hashOfConfig":"28"},{"size":340,"mtime":1637572762700,"results":"38","hashOfConfig":"28"},{"size":248,"mtime":1637572762700,"results":"39","hashOfConfig":"28"},{"size":323,"mtime":1637572762700,"results":"40","hashOfConfig":"28"},{"size":1302,"mtime":1637572762700,"results":"41","hashOfConfig":"28"},{"size":219,"mtime":1637572762704,"results":"42","hashOfConfig":"28"},{"size":228,"mtime":1637572762704,"results":"43","hashOfConfig":"28"},{"size":1022,"mtime":1637572762704,"results":"44","hashOfConfig":"28"},{"size":931,"mtime":1637572762700,"results":"45","hashOfConfig":"28"},{"size":515,"mtime":1637572762704,"results":"46","hashOfConfig":"28"},{"size":2046,"mtime":1637572762700,"results":"47","hashOfConfig":"28"},{"size":1496,"mtime":1637572762700,"results":"48","hashOfConfig":"28"},{"size":512,"mtime":1637572762704,"results":"49","hashOfConfig":"28"},{"size":2373,"mtime":1637572762704,"results":"50","hashOfConfig":"28"},{"size":115,"mtime":1637572762704,"results":"51","hashOfConfig":"28"},{"size":788,"mtime":1637572762704,"results":"52","hashOfConfig":"28"},{"size":2422,"mtime":1637572762704,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nh4kuh",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ashiqa/Desktop/reddit-clone/client/src/index.js",[],"/home/ashiqa/Desktop/reddit-clone/client/src/App.js",[],"/home/ashiqa/Desktop/reddit-clone/client/src/AuthModalContext.js",[],"/home/ashiqa/Desktop/reddit-clone/client/src/UserContext.js",[],"/home/ashiqa/Desktop/reddit-clone/client/src/PostFormModalContext.js",[],"/home/ashiqa/Desktop/reddit-clone/client/src/Routing.js",[],"/home/ashiqa/Desktop/reddit-clone/client/src/Header.js",[],"/home/ashiqa/Desktop/reddit-clone/client/src/RoutingSwitch.js",["109"],"import {Route, Switch, useLocation} from \"react-router-dom\";\nimport {useState, useEffect} from \"react\";\nimport Board from \"./Board\";\nimport CommentPage from \"./CommentPage\";\nimport CommentModal from \"./CommentModal\";\n\nfunction RoutingSwitch() {\n\n  const [postOpen, setPostOpen] = useState(false);\n  // const [commentId, setCommentId] = useState(null);\n\n  let location = useLocation();\n  let commentId = null;\n\n  if (location.state && location.state.commentId) {\n    location.pathname = '/';\n    if (postOpen) {\n      commentId = location.state.commentId;\n    } else {\n      location.state.commentId = null;\n    }\n\n  }\n\n  useEffect(() => {\n    setPostOpen(true);\n  }, [commentId]);\n\n  useEffect(() => {\n    commentId = null;\n  }, [postOpen]);\n\n  return (\n    <div>\n      {commentId && (\n        <div>\n          <CommentModal\n            id={commentId}\n            open={postOpen}\n            onClickOut={() => setPostOpen(false)} />\n        </div>\n      )}\n      <Switch location={location}>\n        <Route exact path=\"/\" component={Board} />\n        <Route exact path=\"/comments/:id\" component={CommentPage} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default RoutingSwitch;","/home/ashiqa/Desktop/reddit-clone/client/src/PostFormModal.js",[],"/home/ashiqa/Desktop/reddit-clone/client/src/AuthModal.js",[],"/home/ashiqa/Desktop/reddit-clone/client/src/Button.js",[],"/home/ashiqa/Desktop/reddit-clone/client/src/Board.js",[],"/home/ashiqa/Desktop/reddit-clone/client/src/CommentPage.js",[],"/home/ashiqa/Desktop/reddit-clone/client/src/CommentModal.js",["110","111","112","113"],"import PostContent from \"./PostContent\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport ClickOutHandler from 'react-clickout-handler';\nimport CommentForm from \"./CommentForm\";\nimport Comments from \"./Comments\";\nimport RootCommentContext from \"./RootCommentContext\";\nimport Comment from \"./Comment\";\n\nfunction CommentModal(props) {\n\n  const [comment,setComment] = useState({});\n\n  const visibleClass = props.open ? 'block' : 'hidden';\n\n  useEffect(() => {\n    axios.get('http://localhost:4000/comments/'+props.id)\n      .then(response => {\n        setComment(response.data);\n      });\n  }, [props.id]);\n\n  function close() {\n    setComment({});\n    props.onClickOut();\n  }\n\n  return (\n    <div className={\"w-screen h-screen fixed top-0 left-0 z-20 flex \"+visibleClass} style={{backgroundColor:'rgba(0,0,0,.8)'}}>\n      <ClickOutHandler onClickOut={() => close()}>\n        <div className=\"border my-4 border-reddit_dark-brightest w-3/4 lg:w-1/2 bg-reddit_dark-brighter text-reddit_text self-center p-4 mx-auto rounded-md\">\n          <div className=\"block overflow-scroll\" style={{maxHeight:\"calc(100vh - 50px)\"}}>\n            <Comment comment={comment} id={props.id} />\n          </div>\n        </div>\n      </ClickOutHandler>\n    </div>\n  );\n}\n\nexport default CommentModal;","/home/ashiqa/Desktop/reddit-clone/client/src/Input.js",[],"/home/ashiqa/Desktop/reddit-clone/client/src/Textarea.js",[],"/home/ashiqa/Desktop/reddit-clone/client/src/PostForm.js",[],"/home/ashiqa/Desktop/reddit-clone/client/src/BoardHeader.js",[],"/home/ashiqa/Desktop/reddit-clone/client/src/PostsListing.js",[],"/home/ashiqa/Desktop/reddit-clone/client/src/Comment.js",["114","115"],"import Post from \"./Post\";\nimport CommentForm from \"./CommentForm\";\nimport RootCommentContext from \"./RootCommentContext\";\nimport Comments from \"./Comments\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nfunction Comment(props) {\n\n  const [comment,setComment] = useState({});\n  const [comments,setComments] = useState([]);\n  const [commentsTotals, setCommentsTotals] = useState(null);\n  const [userVotes, setUserVotes] = useState(null);\n\n  function refreshComments() {\n    axios.get('http://localhost:4000/comments/root/'+props.id)\n      .then(response => {\n        setComments(response.data);\n      });\n  }\n\n  function refreshVotes() {\n    const commentsIds = [comment._id, ...comments.map(c => c._id) ];\n    axios.post('http://localhost:4000/votes', {commentsIds}, {withCredentials:true})\n      .then(response => {\n        setCommentsTotals(response.data.commentsTotals);\n        setUserVotes(response.data.userVotes);\n      })\n  }\n\n  useEffect(() => {\n    if (props.comment) {\n      setComment(props.comment);\n    } else {\n      axios.get('http://localhost:4000/comments/'+props.id)\n        .then(response => {\n          setComment(response.data);\n        });\n    }\n    refreshComments();\n  }, [props.id, props.comment]);\n\n  useEffect(() => {\n    refreshVotes();\n  }, [comments.length]);\n\n  return (\n    <>\n      {comment && (\n        <Post {...comment} open={true} />\n      )}\n      {!!comment && !!comment._id && (\n        <>\n          <hr className=\"border-reddit_border my-4\"/>\n          <CommentForm onSubmit={() => refreshComments()}\n                       rootId={comment._id} parentId={comment._id} showAuthor={true} />\n          <hr className=\"border-reddit_border my-4\"/>\n          <RootCommentContext.Provider value={{refreshComments,refreshVotes,commentsTotals,userVotes}}>\n            <Comments\n              parentId={comment._id}\n              rootId={comment._id}\n              comments={comments} />\n          </RootCommentContext.Provider>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default Comment;","/home/ashiqa/Desktop/reddit-clone/client/src/CommentForm.js",[],"/home/ashiqa/Desktop/reddit-clone/client/src/PostContent.js",[],"/home/ashiqa/Desktop/reddit-clone/client/src/Comments.js",[],"/home/ashiqa/Desktop/reddit-clone/client/src/RootCommentContext.js",[],"/home/ashiqa/Desktop/reddit-clone/client/src/Post.js",[],"/home/ashiqa/Desktop/reddit-clone/client/src/Voting.js",[],{"ruleId":"116","severity":1,"message":"117","line":30,"column":17,"nodeType":"118","endLine":30,"endColumn":21},{"ruleId":"119","severity":1,"message":"120","line":1,"column":8,"nodeType":"121","messageId":"122","endLine":1,"endColumn":19},{"ruleId":"119","severity":1,"message":"123","line":5,"column":8,"nodeType":"121","messageId":"122","endLine":5,"endColumn":19},{"ruleId":"119","severity":1,"message":"124","line":6,"column":8,"nodeType":"121","messageId":"122","endLine":6,"endColumn":16},{"ruleId":"119","severity":1,"message":"125","line":7,"column":8,"nodeType":"121","messageId":"122","endLine":7,"endColumn":26},{"ruleId":"116","severity":1,"message":"126","line":41,"column":6,"nodeType":"127","endLine":41,"endColumn":31,"suggestions":"128"},{"ruleId":"116","severity":1,"message":"129","line":45,"column":6,"nodeType":"127","endLine":45,"endColumn":23,"suggestions":"130"},"react-hooks/exhaustive-deps","Assignments to the 'commentId' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","no-unused-vars","'PostContent' is defined but never used.","Identifier","unusedVar","'CommentForm' is defined but never used.","'Comments' is defined but never used.","'RootCommentContext' is defined but never used.","React Hook useEffect has a missing dependency: 'refreshComments'. Either include it or remove the dependency array.","ArrayExpression",["131"],"React Hook useEffect has a missing dependency: 'refreshVotes'. Either include it or remove the dependency array.",["132"],{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},"Update the dependencies array to be: [props.id, props.comment, refreshComments]",{"range":"137","text":"138"},"Update the dependencies array to be: [comments.length, refreshVotes]",{"range":"139","text":"140"},[1222,1247],"[props.id, props.comment, refreshComments]",[1296,1313],"[comments.length, refreshVotes]"]