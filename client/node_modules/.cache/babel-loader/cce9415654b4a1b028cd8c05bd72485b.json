{"ast":null,"code":"var _jsxFileName = \"/home/ashiqa/Desktop/SEproject/docoverflow/client/src/Comments.js\",\n    _s = $RefreshSig$();\n\nimport TimeAgo from 'timeago-react';\nimport Button from \"./Button\";\nimport CommentForm from \"./CommentForm\";\nimport { useState, useContext } from 'react';\nimport RootCommentContext from \"./RootCommentContext\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from \"remark-gfm\";\nimport Voting from \"./Voting\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Comments(props) {\n  _s();\n\n  //this is used to implement nested comments\n  const [showForm, setShowForm] = useState(false); //comments variable has all the comments whose parentId is contained is the same as the parentId of props\n\n  const comments = props.comments.filter(comment => props.parentId === comment.parentId); //the parent comment where the nested thread starts\n\n  const rootCommentInfo = useContext(RootCommentContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'my-2 text-docflow_text',\n    children: comments.map(comment => {\n      //store the displaying of the comments that have parentId same as the id of iterator\n      const replies = props.comments.filter(c => c.parentId === comment._id);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'mb-2',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-docflow_text w-10 h-10 rounded-full mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"leading-10 pr-2 text-lg font-sans\",\n            children: comment.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TimeAgo, {\n            className: \"leading-10 text-md font-sans\",\n            datetime: comment.postedAt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-l-2 border-docflow_text-darker p-3 pb-0\",\n          style: {\n            marginLeft: '18px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pl-4 -mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                remarkPlugins: [gfm],\n                children: comment.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Voting, {\n              commentId: comment._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: 'button',\n              onClick: () => setShowForm(comment._id),\n              className: \"bg-docflow_dark-brighter text-docflow_text-darker border-none py-2 pl-0 pr-0\",\n              children: \"Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), comment._id === showForm &&\n            /*#__PURE__*/\n            // Use the comment form to provide option to write a new comment as the current user \n            _jsxDEV(CommentForm, {\n              parentId: comment._id,\n              rootId: props.rootId,\n              onSubmit: () => {\n                setShowForm(false);\n                rootCommentInfo.refreshComments();\n              },\n              showAuthor: false,\n              onCancel: e => setShowForm(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this), replies.length > 0 && /*#__PURE__*/_jsxDEV(Comments, {\n              comments: props.comments,\n              parentId: comment._id,\n              rootId: props.rootId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Comments, \"5s2fUNNn/pafkcJP16SaAry4mD4=\");\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/home/ashiqa/Desktop/SEproject/docoverflow/client/src/Comments.js"],"names":["TimeAgo","Button","CommentForm","useState","useContext","RootCommentContext","ReactMarkdown","gfm","Voting","Comments","props","showForm","setShowForm","comments","filter","comment","parentId","rootCommentInfo","map","replies","c","_id","author","postedAt","marginLeft","body","rootId","refreshComments","e","length"],"mappings":"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","sourcesContent":["import TimeAgo from 'timeago-react';\nimport Button from \"./Button\";\nimport CommentForm from \"./CommentForm\";\nimport {useState, useContext} from 'react';\nimport RootCommentContext from \"./RootCommentContext\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from \"remark-gfm\";\nimport Voting from \"./Voting\";\n\nfunction Comments(props) {\n\n  //this is used to implement nested comments\n  const [showForm,setShowForm] = useState(false);\n\n  //comments variable has all the comments whose parentId is contained is the same as the parentId of props\n  const comments = props.comments.filter(comment => props.parentId === comment.parentId);\n  \n  //the parent comment where the nested thread starts\n  const rootCommentInfo = useContext(RootCommentContext);\n\n  return (\n    <div className={'my-2 text-docflow_text'}>\n      {/* loop through all the data present in list comments*/}\n      {comments.map(comment => {\n\n        //store the displaying of the comments that have parentId same as the id of iterator\n        const replies = props.comments.filter(c => c.parentId === comment._id);\n        return (\n          <div className={'mb-2'}>\n            <div className=\"flex mb-2\">\n              <div className=\"bg-docflow_text w-10 h-10 rounded-full mr-2\"/>\n              <div className=\"leading-10 pr-2 text-lg font-sans\">{comment.author}</div>\n              {/* What time the comment/reply was posted at */}\n              <TimeAgo className=\"leading-10 text-md font-sans\" datetime={comment.postedAt}/>\n            </div>\n            <div className=\"border-l-2 border-docflow_text-darker p-3 pb-0\"\n                 style={{marginLeft:'18px'}}>\n              <div className=\"pl-4 -mt-4\">\n                <div>\n                  <ReactMarkdown remarkPlugins={[gfm]} children={comment.body} />\n                </div>\n                {/* Activates the voting system on every comment */}\n                <Voting commentId={comment._id} />\n                <Button type={'button'}\n                        onClick={() => setShowForm(comment._id)}\n                        className=\"bg-docflow_dark-brighter text-docflow_text-darker border-none py-2 pl-0 pr-0\">Reply</Button>\n                {comment._id === showForm && (\n                  \n                  // Use the comment form to provide option to write a new comment as the current user \n                  <CommentForm\n                    parentId={comment._id}\n                    rootId={props.rootId}\n                    onSubmit={() => {\n                      setShowForm(false);\n                      rootCommentInfo.refreshComments();\n                    }}\n                    showAuthor={false}\n                    onCancel={e => setShowForm(false)}/>\n                )}\n                {/* Call itself again to show the nested replies to one of the replies of the current comment */}\n                {replies.length > 0 && (\n                  <Comments comments={props.comments} parentId={comment._id} rootId={props.rootId} />\n                )}\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Comments;"]},"metadata":{},"sourceType":"module"}