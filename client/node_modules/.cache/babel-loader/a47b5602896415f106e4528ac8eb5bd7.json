{"ast":null,"code":"var _jsxFileName = \"/home/ashiqa/Desktop/SEproject/docoverflow/client/src/CommentModal.js\",\n    _s = $RefreshSig$();\n\nimport PostContent from \"./PostContent\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ClickOutHandler from 'react-clickout-handler';\nimport CommentForm from \"./CommentForm\";\nimport Comments from \"./Comments\";\nimport RootCommentContext from \"./RootCommentContext\";\nimport Comment from \"./Comment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CommentModal(props) {\n  _s();\n\n  //used for displaying specific comments\n  const [comment, setComment] = useState({}); //we can choose the extra information to be visible or hidden using this\n\n  const visibleClass = props.open ? 'block' : 'hidden'; //this is used to get the comments already made and store it into the comment list using State hook\n  //we use useEffect because it can change at any time and the changes should be reflected dynamically \n\n  useEffect(() => {\n    axios.get('http://localhost:4000/comments/' + props.id).then(response => {\n      setComment(response.data);\n    });\n  }, [props.id]);\n\n  function close() {\n    setComment({});\n    props.onClickOut();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen h-screen fixed top-0 left-0 z-20 flex \" + visibleClass,\n    style: {\n      backgroundColor: 'rgba(0,0,0,.8)'\n    },\n    children: /*#__PURE__*/_jsxDEV(ClickOutHandler, {\n      onClickOut: () => close(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border my-4 border-docflow_dark-brightest w-3/4 lg:w-1/2 bg-docflow_dark-brighter text-docflow_text self-center p-4 mx-auto rounded-md\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block overflow-scroll\",\n          style: {\n            maxHeight: \"calc(100vh - 50px)\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Comment, {\n            comment: comment,\n            id: props.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CommentModal, \"9bN1tMtLgltYhmHt3heUpLdR1rA=\");\n\n_c = CommentModal;\nexport default CommentModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentModal\");","map":{"version":3,"sources":["/home/ashiqa/Desktop/SEproject/docoverflow/client/src/CommentModal.js"],"names":["PostContent","useEffect","useState","axios","ClickOutHandler","CommentForm","Comments","RootCommentContext","Comment","CommentModal","props","comment","setComment","visibleClass","open","get","id","then","response","data","close","onClickOut","backgroundColor","maxHeight"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAE3B;AACA,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBV,QAAQ,CAAC,EAAD,CAArC,CAH2B,CAK3B;;AACA,QAAMW,YAAY,GAAGH,KAAK,CAACI,IAAN,GAAa,OAAb,GAAuB,QAA5C,CAN2B,CAQ3B;AACA;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAACY,GAAN,CAAU,oCAAkCL,KAAK,CAACM,EAAlD,EACGC,IADH,CACQC,QAAQ,IAAI;AAChBN,MAAAA,UAAU,CAACM,QAAQ,CAACC,IAAV,CAAV;AACD,KAHH;AAID,GALQ,EAKN,CAACT,KAAK,CAACM,EAAP,CALM,CAAT;;AAQA,WAASI,KAAT,GAAiB;AACfR,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAF,IAAAA,KAAK,CAACW,UAAN;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAE,oDAAkDR,YAAlE;AAAgF,IAAA,KAAK,EAAE;AAACS,MAAAA,eAAe,EAAC;AAAjB,KAAvF;AAAA,2BACE,QAAC,eAAD;AAAiB,MAAA,UAAU,EAAE,MAAMF,KAAK,EAAxC;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,wIAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAuC,UAAA,KAAK,EAAE;AAACG,YAAAA,SAAS,EAAC;AAAX,WAA9C;AAAA,iCAEE,QAAC,OAAD;AAAS,YAAA,OAAO,EAAEZ,OAAlB;AAA2B,YAAA,EAAE,EAAED,KAAK,CAACM;AAArC;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAnCQP,Y;;KAAAA,Y;AAqCT,eAAeA,YAAf","sourcesContent":["import PostContent from \"./PostContent\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport ClickOutHandler from 'react-clickout-handler';\nimport CommentForm from \"./CommentForm\";\nimport Comments from \"./Comments\";\nimport RootCommentContext from \"./RootCommentContext\";\nimport Comment from \"./Comment\";\n\nfunction CommentModal(props) {\n\n  //used for displaying specific comments\n  const [comment,setComment] = useState({});\n\n  //we can choose the extra information to be visible or hidden using this\n  const visibleClass = props.open ? 'block' : 'hidden';\n\n  //this is used to get the comments already made and store it into the comment list using State hook\n  //we use useEffect because it can change at any time and the changes should be reflected dynamically \n  useEffect(() => {\n    axios.get('http://localhost:4000/comments/'+props.id)\n      .then(response => {\n        setComment(response.data);\n      });\n  }, [props.id]);\n\n\n  function close() {\n    setComment({});\n    props.onClickOut();\n  }\n\n  return (\n    <div className={\"w-screen h-screen fixed top-0 left-0 z-20 flex \"+visibleClass} style={{backgroundColor:'rgba(0,0,0,.8)'}}>\n      <ClickOutHandler onClickOut={() => close()}>\n        <div className=\"border my-4 border-docflow_dark-brightest w-3/4 lg:w-1/2 bg-docflow_dark-brighter text-docflow_text self-center p-4 mx-auto rounded-md\">\n          <div className=\"block overflow-scroll\" style={{maxHeight:\"calc(100vh - 50px)\"}}>\n            {/* Use the comment component to display the comment */}\n            <Comment comment={comment} id={props.id} />\n          </div>\n        </div>\n      </ClickOutHandler>\n    </div>\n  );\n}\n\nexport default CommentModal;"]},"metadata":{},"sourceType":"module"}