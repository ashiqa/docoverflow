{"ast":null,"code":"var _jsxFileName = \"/home/ashiqa/Desktop/docoverflow/client/src/CommentForm.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport UserContext from \"./UserContext\";\nimport Textarea from \"./Textarea\";\nimport Button from \"./Button\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CommentForm(props) {\n  _s();\n\n  //The user that is trying to comment has his info saved in userInfo using the context\n  const userInfo = useContext(UserContext); //The comment that is written is stored in commentBody using the State Hook\n\n  const [commentBody, setCommentBody] = useState(''); // This is used to post the comment of the user to the database via the backend\n\n  function postComment(e) {\n    e.preventDefault();\n    const data = {\n      body: commentBody,\n      parentId: props.parentId,\n      rootId: props.rootId\n    };\n    axios.post('http://localhost:4000/comments', data, {\n      withCredentials: true\n    }).then(response => {\n      setCommentBody('');\n\n      if (props.onSubmit) {\n        props.onSubmit();\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'text-docflow_text',\n    children: [userInfo.username && props.showAuthor && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2\",\n      children: [\"Comment as \", userInfo.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => postComment(e),\n      children: [/*#__PURE__*/_jsxDEV(Textarea, {\n        className: \"w-full mb-3 border border-docflow_border\",\n        onChange: e => setCommentBody(e.target.value),\n        value: commentBody,\n        placeholder: 'Your comment. You can use markdown here'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-right\",\n        children: [!!props.onCancel && /*#__PURE__*/_jsxDEV(Button, {\n          outline: true,\n          className: \"p-2 mr-2\",\n          onClick: e => props.onCancel(),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"p-2\",\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CommentForm, \"6l9gX+IR4Vi7nOodndRytSpMI2k=\");\n\n_c = CommentForm;\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/home/ashiqa/Desktop/docoverflow/client/src/CommentForm.js"],"names":["useContext","useState","UserContext","Textarea","Button","axios","CommentForm","props","userInfo","commentBody","setCommentBody","postComment","e","preventDefault","data","body","parentId","rootId","post","withCredentials","then","response","onSubmit","username","showAuthor","target","value","onCancel"],"mappings":";;;AAAA,SAAQA,UAAR,EAAoBC,QAApB,QAAmC,OAAnC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,WAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAE3B;AACA,QAAMC,QAAQ,GAAGR,UAAU,CAACE,WAAD,CAA3B,CAH2B,CAK3B;;AACA,QAAM,CAACO,WAAD,EAAaC,cAAb,IAA+BT,QAAQ,CAAC,EAAD,CAA7C,CAN2B,CAQ3B;;AACA,WAASU,WAAT,CAAqBC,CAArB,EAAwB;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAG;AAACC,MAAAA,IAAI,EAACN,WAAN;AAAmBO,MAAAA,QAAQ,EAACT,KAAK,CAACS,QAAlC;AAA2CC,MAAAA,MAAM,EAACV,KAAK,CAACU;AAAxD,KAAb;AACAZ,IAAAA,KAAK,CAACa,IAAN,CAAW,gCAAX,EAA6CJ,IAA7C,EAAmD;AAACK,MAAAA,eAAe,EAAC;AAAjB,KAAnD,EACGC,IADH,CACQC,QAAQ,IAAI;AAChBX,MAAAA,cAAc,CAAC,EAAD,CAAd;;AACA,UAAIH,KAAK,CAACe,QAAV,EAAoB;AAClBf,QAAAA,KAAK,CAACe,QAAN;AACD;AACF,KANH;AAOD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAE,mBAAhB;AAAA,eAGGd,QAAQ,CAACe,QAAT,IAAqBhB,KAAK,CAACiB,UAA3B,iBACC;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gCACchB,QAAQ,CAACe,QADvB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAUE;AAAM,MAAA,QAAQ,EAAEX,CAAC,IAAID,WAAW,CAACC,CAAD,CAAhC;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,SAAS,EAAC,0CAApB;AACU,QAAA,QAAQ,EAAEA,CAAC,IAAIF,cAAc,CAACE,CAAC,CAACa,MAAF,CAASC,KAAV,CADvC;AAEU,QAAA,KAAK,EAAEjB,WAFjB;AAGU,QAAA,WAAW,EAAE;AAHvB;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,mBACG,CAAC,CAACF,KAAK,CAACoB,QAAR,iBACC,QAAC,MAAD;AAAQ,UAAA,OAAO,MAAf;AACQ,UAAA,SAAS,EAAC,UADlB;AAEQ,UAAA,OAAO,EAAEf,CAAC,IAAIL,KAAK,CAACoB,QAAN,EAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAME,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GAhDQrB,W;;KAAAA,W;AAkDT,eAAeA,WAAf","sourcesContent":["import {useContext, useState} from \"react\";\nimport UserContext from \"./UserContext\";\nimport Textarea from \"./Textarea\";\nimport Button from \"./Button\";\nimport axios from \"axios\";\n\nfunction CommentForm (props) {\n\n  //The user that is trying to comment has his info saved in userInfo using the context\n  const userInfo = useContext(UserContext);\n\n  //The comment that is written is stored in commentBody using the State Hook\n  const [commentBody,setCommentBody] = useState('');\n  \n  // This is used to post the comment of the user to the database via the backend\n  function postComment(e) {\n    e.preventDefault();\n    const data = {body:commentBody, parentId:props.parentId,rootId:props.rootId,};\n    axios.post('http://localhost:4000/comments', data, {withCredentials:true})\n      .then(response => {\n        setCommentBody('');\n        if (props.onSubmit) {\n          props.onSubmit();\n        }\n      });\n  }\n\n  return (\n    <div className={'text-docflow_text'}>\n\n      {/* Shows you which account you are logged into */}\n      {userInfo.username && props.showAuthor && (\n        <div className=\"mb-2\">\n          Comment as {userInfo.username}\n        </div>\n      )}\n\n      {/* Input field to get the comment text from the user */}\n      <form onSubmit={e => postComment(e)}>\n        <Textarea className=\"w-full mb-3 border border-docflow_border\"\n                  onChange={e => setCommentBody(e.target.value)}\n                  value={commentBody}\n                  placeholder={'Your comment. You can use markdown here'} />\n        <div className=\"text-right\">\n          {!!props.onCancel && (\n            <Button outline\n                    className=\"p-2 mr-2\"\n                    onClick={e => props.onCancel()}>Cancel</Button>\n          )}\n          <Button className=\"p-2\">Comment</Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}