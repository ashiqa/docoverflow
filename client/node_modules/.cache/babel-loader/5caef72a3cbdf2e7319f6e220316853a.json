{"ast":null,"code":"var _jsxFileName = \"/home/ashiqa/Desktop/SEproject/docoverflow/client/src/AuthModal.js\",\n    _s = $RefreshSig$();\n\nimport Input from \"./Input\";\nimport Button from \"./Button\";\nimport { useState, useContext } from 'react';\nimport axios from 'axios';\nimport AuthModalContext from \"./AuthModalContext\";\nimport ClickOutHandler from 'react-clickout-handler';\nimport UserContext from \"./UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AuthModal() {\n  _s();\n\n  const [modalType, setModalType] = useState('login');\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const modalContext = useContext(AuthModalContext);\n  const user = useContext(UserContext); //just to control visibility of modals in different contexts\n\n  const visibleClass = modalContext.show ? 'block' : 'hidden';\n\n  if (modalContext.show && modalContext.show !== modalType) {\n    setModalType(modalContext.show);\n  }\n\n  function register(e) {\n    e.preventDefault(); //the data taken from the input fields is posted to the backend using axios\n\n    const data = {\n      email,\n      username,\n      password\n    };\n    axios.post('http://localhost:4000/register', data, {\n      withCredentials: true\n    }).then(() => {\n      user.setUser({\n        username\n      });\n      modalContext.setShow(false);\n      setEmail('');\n      setPassword('');\n      setUsername('');\n    });\n  }\n\n  function login() {\n    const data = {\n      username,\n      password\n    }; //the data is posted to backend for authentication of user, if credentials turn out to be true, modal diappears and user has access to everything\n\n    axios.post('http://localhost:4000/login', data, {\n      withCredentials: true\n    }).then(() => {\n      modalContext.setShow(false);\n      user.setUser({\n        username\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen h-screen fixed top-0 left-0 z-30 flex \" + visibleClass,\n    style: {\n      backgroundColor: 'rgba(0,0,0,.6)'\n    },\n    children: /*#__PURE__*/_jsxDEV(ClickOutHandler, {\n      onClickOut: () => modalContext.setShow(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border border-reddit_dark-brightest w-3/4 sm:w-1/2 lg:w-1/4 bg-reddit_dark p-5 text-reddit_text self-center mx-auto rounded-md\",\n        children: [modalType === 'login' && /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl mb-5\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), modalType === 'register' && /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl mb-5\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), modalType === 'register' && /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-reddit_text-darker text-sm\",\n            children: \"E-mail:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\",\n            className: \"mb-3 w-full\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-reddit_text-darker text-sm\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            className: \"mb-3 w-full\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-reddit_text-darker text-sm\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            className: \"mb-3 w-full\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), modalType === 'login' && /*#__PURE__*/_jsxDEV(Button, {\n          className: \"w-full py-2 mb-3\",\n          style: {\n            borderRadius: '.3rem'\n          },\n          onClick: () => login(),\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), modalType === 'register' && /*#__PURE__*/_jsxDEV(Button, {\n          className: \"w-full py-2 mb-3\",\n          style: {\n            borderRadius: '.3rem'\n          },\n          onClick: e => register(e),\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), modalType === 'login' &&\n        /*#__PURE__*/\n        //Clicking on the button \"New to DocOverFlow?\" redirects you to register modal\n        _jsxDEV(\"div\", {\n          children: [\"New to DocOverFlow? \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"text-blue-600\",\n            onClick: () => modalContext.setShow('register'),\n            children: \"SIGN UP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), modalType === 'register' &&\n        /*#__PURE__*/\n        //Clicking on the \"Already have an account?\" button redirects you to login modal\n        _jsxDEV(\"div\", {\n          children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"text-blue-600\",\n            onClick: () => modalContext.setShow('login'),\n            children: \"LOG IN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthModal, \"P9X7kIn/EZr+UG4iknfUyTKgyGY=\");\n\n_c = AuthModal;\nexport default AuthModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthModal\");","map":{"version":3,"sources":["/home/ashiqa/Desktop/SEproject/docoverflow/client/src/AuthModal.js"],"names":["Input","Button","useState","useContext","axios","AuthModalContext","ClickOutHandler","UserContext","AuthModal","modalType","setModalType","email","setEmail","username","setUsername","password","setPassword","modalContext","user","visibleClass","show","register","e","preventDefault","data","post","withCredentials","then","setUser","setShow","login","backgroundColor","target","value","borderRadius"],"mappings":"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","sourcesContent":["import Input from \"./Input\";\nimport Button from \"./Button\";\nimport {useState,useContext} from 'react';\nimport axios from 'axios';\nimport AuthModalContext from \"./AuthModalContext\";\nimport ClickOutHandler from 'react-clickout-handler';\nimport UserContext from \"./UserContext\";\n\nfunction AuthModal() {\n  const [modalType,setModalType] = useState('login');\n  const [email,setEmail] = useState('');\n  const [username,setUsername] = useState('');\n  const [password,setPassword] = useState('');\n\n  const modalContext = useContext(AuthModalContext);\n  const user = useContext(UserContext);\n\n  //just to control visibility of modals in different contexts\n  const visibleClass = modalContext.show ? 'block' : 'hidden';\n  if (modalContext.show && modalContext.show !== modalType) {\n    setModalType(modalContext.show);\n  }\n\n  function register(e) {\n    e.preventDefault();\n    //the data taken from the input fields is posted to the backend using axios\n    const data = {email,username,password};\n    axios.post('http://localhost:4000/register', data, {withCredentials:true})\n      .then(() => {\n        user.setUser({username});\n        modalContext.setShow(false);\n        setEmail('');\n        setPassword('');\n        setUsername('');\n      });\n  }\n\n  function login() {\n    const data = {username,password};\n    //the data is posted to backend for authentication of user, if credentials turn out to be true, modal diappears and user has access to everything\n    axios.post('http://localhost:4000/login', data, {withCredentials:true})\n\t  .then(() => {\n\t    modalContext.setShow(false);\n\t    user.setUser({username})\n\t  });\n  }\n\n  return (\n    <div className={\"w-screen h-screen fixed top-0 left-0 z-30 flex \"+visibleClass} style={{backgroundColor:'rgba(0,0,0,.6)'}}>\n      {/* click out handler basically checks if you have clicked inside an element or outside \n      if you click outside, modal will not be shown\n      otherwise, the modal will be visible to you */}\n      <ClickOutHandler onClickOut={() => modalContext.setShow(false)}>\n        <div className=\"border border-reddit_dark-brightest w-3/4 sm:w-1/2 lg:w-1/4 bg-reddit_dark p-5 text-reddit_text self-center mx-auto rounded-md\">\n          \n          {/* All the code in flower brackets is in Javascript and becomes specific to the component named */}\n          {/* The code in tags is common and applies to all the components */}\n\n          {/* We are defining that there are 2 kinds of Modals - LogIn and Register */}\n          {modalType === 'login' && (\n            <h1 className=\"text-2xl mb-5\">Login</h1>\n          )}\n          {modalType === 'register' && (\n            <h1 className=\"text-2xl mb-5\">Sign Up</h1>\n          )}\n\n          {/* Here we define what fields are specific to the register modal */}\n          {modalType === 'register' && (\n            <label>\n              <span className=\"text-reddit_text-darker text-sm\">E-mail:</span>\n              <Input type=\"email\" className=\"mb-3 w-full\" value={email} onChange={e => setEmail(e.target.value)} />\n            </label>\n          )}\n\n          {/* Since this part is inside a label tag, all the fields here apply to all the defined modals */}\n          <label>\n            <span className=\"text-reddit_text-darker text-sm\">Username:</span>\n            <Input type=\"text\" className=\"mb-3 w-full\" value={username} onChange={e => setUsername(e.target.value)} />\n          </label>\n\n          <label>\n            <span className=\"text-reddit_text-darker text-sm\">Password:</span>\n            <Input type=\"password\" className=\"mb-3 w-full\" value={password} onChange={e => setPassword(e.target.value)} />\n          </label>\n\n          {/* Specific to login modal, clicking on the button activates the login function*/}\n          {modalType === 'login' && (\n            <Button className=\"w-full py-2 mb-3\" style={{borderRadius:'.3rem'}} onClick={()=>login()}>\n              Log In\n            </Button>\n          )}\n\n          {/* Specific to register modal, clicking on the button activates the register function */}\n          {modalType === 'register' && (\n            <Button className=\"w-full py-2 mb-3\" style={{borderRadius:'.3rem'}} onClick={e => register(e)}>\n              Sign Up\n            </Button>\n          )}\n\n\n          {modalType === 'login' && (\n            //Clicking on the button \"New to DocOverFlow?\" redirects you to register modal\n            <div>\n              New to DocOverFlow? <button className=\"text-blue-600\" onClick={() => modalContext.setShow('register')}>SIGN UP</button>\n            </div>\n          )}\n          {modalType === 'register' && (\n            //Clicking on the \"Already have an account?\" button redirects you to login modal\n            <div>\n              Already have an account? <button className=\"text-blue-600\" onClick={() => modalContext.setShow('login')}>LOG IN</button>\n            </div>\n          )}\n        </div>\n      </ClickOutHandler>\n    </div>\n  );\n}\n\nexport default AuthModal;\n"]},"metadata":{},"sourceType":"module"}