{"ast":null,"code":"var _jsxFileName = \"/Users/ishita/Desktop/docoverflow/client/src/PostFormModal.js\",\n    _s = $RefreshSig$();\n\nimport ClickOutHandler from 'react-clickout-handler';\nimport { useState, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Input from \"./Input\";\nimport Textarea from \"./Textarea\";\nimport Button from \"./Button\";\nimport PostFormModalContext from \"./PostFormModalContext\";\nimport AuthModalContext from \"./AuthModalContext\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostFormModal() {\n  _s();\n\n  const modalContext = useContext(PostFormModalContext);\n  const authModalContext = useContext(AuthModalContext);\n  const visibleClass = modalContext.show ? 'block' : 'hidden';\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [newPostId, setNewPostId] = useState(null);\n\n  function createPost() {\n    const data = {\n      title,\n      body\n    };\n    axios.post('http://localhost:4000/comments', data, {\n      withCredentials: true\n    }).then(response => {\n      setNewPostId(response.data._id);\n    }).catch(error => {\n      console.log(error);\n\n      if (error.response.status === 401) {\n        authModalContext.setShow('login');\n      }\n    });\n  }\n\n  if (newPostId) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: '/comments/' + newPostId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen h-screen fixed top-0 left-0 z-20 flex \" + visibleClass,\n    style: {\n      backgroundColor: 'rgba(0,0,0,.8)'\n    },\n    children: /*#__PURE__*/_jsxDEV(ClickOutHandler, {\n      onClickOut: () => {},\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border border-reddit_dark-brightest w-3/4 md:w-2/4 bg-reddit_dark p-5 text-reddit_text self-center mx-auto rounded-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl mb-5\",\n          children: \"Create a post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          className: 'w-full mb-3',\n          placeholder: 'Title',\n          onChange: e => setTitle(e.target.value),\n          value: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n          className: 'w-full mb-3',\n          placeholder: 'Post text (you can use markdown)',\n          onChange: e => setBody(e.target.value),\n          value: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'text-right',\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => modalContext.setShow(false),\n            outline: true,\n            className: 'px-4 py-2 mr-3',\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => createPost(),\n            className: 'px-4 py-2',\n            children: \"POST\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostFormModal, \"XZnK/l1h6csPGeOIYgyvamy0nxk=\");\n\n_c = PostFormModal;\nexport default PostFormModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostFormModal\");","map":{"version":3,"sources":["/Users/ishita/Desktop/docoverflow/client/src/PostFormModal.js"],"names":["ClickOutHandler","useState","useContext","Redirect","Input","Textarea","Button","PostFormModalContext","AuthModalContext","axios","PostFormModal","modalContext","authModalContext","visibleClass","show","title","setTitle","body","setBody","newPostId","setNewPostId","createPost","data","post","withCredentials","then","response","_id","catch","error","console","log","status","setShow","backgroundColor","e","target","value"],"mappings":"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","sourcesContent":["import ClickOutHandler from 'react-clickout-handler';\nimport {useState,useContext} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport Input from \"./Input\";\nimport Textarea from \"./Textarea\";\nimport Button from \"./Button\";\nimport PostFormModalContext from \"./PostFormModalContext\";\nimport AuthModalContext from \"./AuthModalContext\";\nimport axios from \"axios\";\n\nfunction PostFormModal () {\n\n  const modalContext = useContext(PostFormModalContext);\n  const authModalContext = useContext(AuthModalContext);\n\n  const visibleClass = modalContext.show ? 'block' : 'hidden';\n\n  const [title,setTitle] = useState('');\n  const [body,setBody] = useState('');\n  const [newPostId, setNewPostId] = useState(null);\n\n  function createPost() {\n    const data = {title,body};\n    axios.post('http://localhost:4000/comments', data, {withCredentials:true})\n      .then(response => {\n        setNewPostId(response.data._id);\n      })\n      .catch(error => {\n        console.log(error);\n        if (error.response.status === 401) {\n          authModalContext.setShow('login');\n        }\n      });\n  }\n\n  if (newPostId) {\n    return (<Redirect to={'/comments/'+newPostId} />);\n  }\n\n  return (\n    <div\n      className={\"w-screen h-screen fixed top-0 left-0 z-20 flex \"+visibleClass}  style={{backgroundColor:'rgba(0,0,0,.8)'}}>\n      <ClickOutHandler onClickOut={() => {}  }>\n        <div className=\"border border-reddit_dark-brightest w-3/4 md:w-2/4 bg-reddit_dark p-5 text-reddit_text self-center mx-auto rounded-md\">\n          <h1 className=\"text-2xl mb-5\">Create a post</h1>\n          <Input\n            className={'w-full mb-3'}\n            placeholder={'Title'}\n            onChange={e => setTitle(e.target.value)}\n            value={title} />\n          <Textarea\n            className={'w-full mb-3'}\n            placeholder={'Post text (you can use markdown)'}\n            onChange={e => setBody(e.target.value)}\n            value={body} />\n          <div className={'text-right'}>\n            <Button onClick={() => modalContext.setShow(false)}\n                    outline className={'px-4 py-2 mr-3'}>Cancel</Button>\n            <Button onClick={() => createPost()} className={'px-4 py-2'}>POST</Button>\n          </div>\n        </div>\n      </ClickOutHandler>\n    </div>\n  );\n}\n\nexport default PostFormModal;"]},"metadata":{},"sourceType":"module"}